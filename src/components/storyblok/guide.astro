---
import type { ComponentProps, GuideContent } from '@lib/types';
import {
  storyblokEditable,
  renderRichText,
  type ISbRichtext,
} from '@storyblok/astro';

import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';

const { blok, links = [] } = Astro.props as ComponentProps;

const content = blok as GuideContent;

// title
// tagline
// featured_image (image)
// content (rich text)
// body (blocks)
// meta_fields
---

<header class="pb-16 max-sm:my-28" {...storyblokEditable(blok)}>
  <div class="ws-container">
    <h1
      class="text-center text-5.5xl leading-tight sm:leading-13 font-sans font-semibold"
    >
      {content.title}
    </h1>
    <p
      class="text-center tagline font-medium leading-13 text-5.25xl font-bitter text-brand-secondary-900 dark:text-brand-primary-900"
    >
      {content.tagline}
    </p>
  </div>
</header>

<!-- Featured image and content-->
<section class="ws-container">
  {
    content?.featured_image && content?.featured_image.filename && (
      <div class="lg:px-10 mb-24">
        <figure class="bg-brand-secondary-100 mt-16 pt-32 px-10 pb-16">
          <img
            src={content.featured_image?.filename}
            alt={content.featured_image?.alt}
            class="object-fit block mx-auto w-full"
          />
        </figure>
      </div>
    )
  }

  <div class="grid grid-cols-1 gap-12 max-sm:px-4 lg:px-10">
    {
      content && (
        <div
          class="insight-content prose font-bitter max-w-none dark:text-white"
          set:html={renderRichText(content.content as ISbRichtext)}
        />
      )
    }
  </div>
</section>

<section class="ws-container" {...storyblokEditable(blok)}>
  {
    content?.body?.map((blok: any) => {
      return <StoryblokComponent blok={blok} links={links} />;
    })
  }
</section>
